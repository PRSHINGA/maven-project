pipeline
{
agent any
stages
{
  stage('scm checkout')
  {steps {git branch: 'master' , url: 'https://github.com/prakashk0301/maven-project' }}
  
  
  stage('code build')
  {steps { withMaven(globalMavenSettingsConfig: '66296766-8bd1-4f42-96c2-42f5fb0719a6', jdk: 'JAVA_HOME', maven: 'HOME_MAVEN', mavenSettingsConfig: '978ab454-51b1-43b9-91c5-0acbd32909eb') 
  { sh 'mvn clean package' }
  }}
  
  stage ('docker build or create image')
  {steps 
    { sh 'docker build -t 652912600783.dkr.ecr.eu-central-1.amazonaws.com/devopsoct:latest .' }}  //ecr is docker registry id
    
    
  stage ('docker push to ECR')
  {steps { withDockerRegistry(credentialsId: 'ecr:eu-central-1:ekscicd', url: 'https://652912600783.dkr.ecr.eu-central-1.amazonaws.com/devopsoct') 
   { sh 'docker push 652912600783.dkr.ecr.eu-central-1.amazonaws.com/devopsoct:latest' } 
}}

 stage ('deploy to EKS kubernetes cluster')
 {steps { withAWS(credentials: 'ekscicd', endpointUrl: '172.31.1.131:443', region: 'eu-central-1') 
 {
   sh 'aws eks --region eu-central-1 update-kubeconfig --name eks-test'
   sh 'kubectl apply -f deployment-service.yaml'  
   
   // sh 'helm install ./<chartname> '
} }}
  
  }}
